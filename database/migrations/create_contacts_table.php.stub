<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

/**
 * Class CreateContactsTable
 */
class CreateContactsTable extends Migration
{
    /**
     * Table names.
     *
     * @var string  $table  The main table name for this migration.
     */
    protected $table;

    /**
     * Create a new migration instance.
     */
    public function __construct()
    {
        $this->table = config('contacts.tables.main', 'contacts');
    }

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create($this->table, function(Blueprint $table)
        {
            $table->increments('id');
            $table->uuid('uuid')->nullable();

            $table->enum('type', config('contacts.types', ['personal', 'business']))->default(config('contacts.types', ['personal', 'business'])[0]);
            $table->string('title', 20)->nullable();

            $table->string('first_name',  20)->nullable();
            $table->string('middle_name', 20)->nullable();
            $table->string('last_name',   20)->nullable();

            $table->string('company',  255)->nullable();
            $table->string('position', 255)->nullable();
            $table->string(config('contacts.tax_column', 'vat_id'))->nullable();

            $table->enum('value_type', config('contacts.value_types', ['email']))->nullable();
            $table->text('value')->nullable()

            $table->nullableMorphs('contactable');

            foreach(config('contacts.flags', ['public', 'primary']) as $flag) {
                $table->boolean('is_'. $flag)->default(false)->index();
            }

            $table->longText('notes')->nullable();
            $table->json('properties')->nullable();
            $table->timestamps();
            $table->softDeletes();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists($this->table);
    }
}
